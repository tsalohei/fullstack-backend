{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/PersonRecord.js","components/Persons.js","components/Notification.js","services/numbers.js","App.js","index.js"],"names":["Filter","filter","handleFilterChange","value","onChange","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","PersonRecord","name","number","removalHandler","onClick","Persons","persons","person","toLowerCase","includes","map","id","Notification","message","className","myUrl","axios","get","then","response","data","newObject","post","catch","error","console","log","delete","updatedObject","put","App","useState","setPersons","setNewName","setNewNumber","setFilter","notificationMessage","setNotificationMessage","useEffect","numberService","initialPersons","isDuplicate","i","length","event","target","preventDefault","personObject","oldPerson","find","changedPerson","window","confirm","updatedPerson","concat","setTimeout","returnedPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c5d274a6.chunk.js","sourcesContent":["import React from 'react'\n\n\nconst Filter = ({filter, handleFilterChange}) => {    \n    return (\n      <div>\n        filter shown with:\n        <input\n          value={filter}\n          onChange={handleFilterChange}\n        />\n        <p></p>\n        </div>\n    )\n}\n\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ({addPerson, newName, handleNameChange, newNumber, handleNumberChange}) => {\n    return (\n        <form onSubmit={addPerson}>\n        <div>\n          name: \n          <input \n            value={newName}\n            onChange={handleNameChange}\n          />\n        </div>\n        <div>\n            number: \n            <input \n              value={newNumber}\n              onChange={handleNumberChange}\n            />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst PersonRecord = ({name, number, removalHandler}) => {\n    return (\n        <p>{name} {number} <button onClick={removalHandler}>delete</button></p>\n    )\n}\n\nexport default PersonRecord","import React from 'react'\nimport PersonRecord from './PersonRecord'\n\nconst Persons = ({persons, filter, removalHandler}) => {\n    \n    return (\n        persons.filter(person => \n            person.name.toLowerCase()\n            .includes(filter.toLowerCase())).\n            map(person => \n                <PersonRecord key={person.id} \n                name={person.name} \n                number={person.number} \n                removalHandler={() => removalHandler(person.id, person.name)}/>)    \n    )\n}\n\nexport default Persons","const Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"notification\">\n        {message}\n      </div>\n    )\n  }\n\nexport default Notification  ","import axios from 'axios'\nconst myUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(myUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(myUrl, newObject) \n    return request\n        .then(response => response.data) \n        .catch(error => {\n            console.log(error.response.data)\n        })\n}\n\nconst remove = id => {\n    axios.delete(`${myUrl}/${id}`)\n}\n\nconst replace = (id, updatedObject) => {\n    const request = axios.put(`${myUrl}/${id}`, updatedObject)\n    return request.then(response => response.data)\n} \n\nexport default { getAll, create, remove, replace }\n","import React, { useEffect, useState } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport numberService from './services/numbers'\nimport './index.css'\n\nconst App = () => {\n  const [persons, setPersons] = useState([]) \n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState(null)\n\n  useEffect(() => {\n    numberService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])  \n\n  const handleRemoval = (id, name) => {\n    const answer = window.confirm(`are you sure you want to delete ${name}`)\n    if (!answer) return\n    \n    numberService\n      .remove(id)  \n    \n      setPersons(persons.filter(person => person.id !== id)) \n      setNotificationMessage(`${name} was deleted`)\n\n      setTimeout(() => {\n        setNotificationMessage(null)\n      }, 3000);  \n  }\n\n  \n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n        name: newName,\n        number: newNumber\n    }\n    console.log(isDuplicate(newName))\n\n    if (!isDuplicate(newName)) {\n       numberService\n          .create(personObject)\n          .then(returnedPerson => {\n            setPersons(persons.concat(returnedPerson))\n            \n            setNotificationMessage(`Person ${newName} was added`)\n\n            setTimeout(() => {\n              setNotificationMessage(null)\n            }, 3000);\n          })\n    } else {\n        const oldPerson = persons.find(person => person.name === personObject.name)\n        const id = oldPerson.id\n        const changedPerson = {...oldPerson, number: personObject.number}\n        const result = window.confirm(`${newName} is already added to phonebook. Do you want to replace the old number with a new one?`)\n        if (!result) return\n        \n        numberService\n          .replace(id, changedPerson) \n          .then(updatedPerson => {\n            setPersons(\n              persons\n                .filter(person => person !== oldPerson) \n                .concat(changedPerson) \n            )\n            setNotificationMessage(`${newName}'s number was updated`)\n\n            setTimeout(() => {\n              setNotificationMessage(null)\n            }, 3000);\n          })  \n    }   \n    setNewName('')\n    setNewNumber('')\n  }\n\n  const handleNameChange = (event) => {\n      console.log(event.target.value)\n      setNewName(event.target.value)\n  } \n\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n}\n\n  const isDuplicate = (newName) => {\n      for (let i = 0; i < persons.length; i++) {\n          if (persons[i].name === newName) {\n              return true\n          }\n      }\n      return false\n  }\n\n  return (\n    <div>\n      <h2>DAS Phonebook</h2>\n      <Notification message={notificationMessage}/>\n      <Filter filter={filter} handleFilterChange={handleFilterChange}/>\n      <h2>add a new</h2>\n      <PersonForm addPerson={addPerson} newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange}/>  \n\n      <h2>Numbers</h2>\n      <Persons persons={persons} filter={filter} removalHandler={handleRemoval}/>\n    </div>\n  )\n\n}\n\nexport default App\n ","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n  )\n\n "],"sourceRoot":""}